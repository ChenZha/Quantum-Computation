%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This function will parse touchstone files for its S-Parameter,
%   Y-Parameter, or Z-parameter data. Inputs to the function allow
%   the user to specify the output/input ports that data should be
%   extracted from.
%
% Inputs:
%   1) The filename of the touchstone file
%   2) The desired output port number
%   3) The desired input port number
%   4) (Optional) The desired frequency (Hz)
%
% Outputs:
%   1) A 2xN matrix of parameter data vs frequency. The first column is  
%      the frequency and the second column is the corresponding data value 
%      converted into real imaginary form. Frequency values are in GHz. 
%      If the optional frequency parameter is used then a 1x1 matrix will 
%      be returned with the only element being the response value
%
% Note: Touchstone files generated by other tools may use other units. The
%   touchstone parser will often try to convert the read frequency value
%   to Hz but it is not always able to tell what the original frequency
%   unit is. This typically is not an issue so long as you are aware what
%   units you are working with. The frequency unit used for the fourth
%   input field should match the units used in the data file.
%
% Examples:
%   % Parse the touchstone file for S21 parameter data.
%   Data = TouchstoneParser('myFile.s2p',2,1)
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% SonnetLab, all included documentation, all included examples
% and all other files (unless otherwise specified) are copyrighted by Sonnet Software
% in 2011 with all rights reserved.
%
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS". ANY AND
% ALL EXPRESS OR IMPLIED WARRANTIES ARE DISCLAIMED. UNDER NO CIRCUMSTANCES AND UNDER
% NO LEGAL THEORY, TORT, CONTRACT, OR OTHERWISE, SHALL THE COPYWRITE HOLDERS,  CONTRIBUTORS,
% MATLAB, OR SONNET SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR
% CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF
% GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER COMMERCIAL
% DAMAGES OR LOSSES, OR FOR ANY DAMAGES EVEN IF THE COPYWRITE HOLDERS, CONTRIBUTORS, MATLAB,
% OR SONNET SOFTWARE HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES, OR FOR ANY CLAIM
% BY ANY OTHER PARTY.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function Data = TouchstoneParser(theDataFileName,theOutputPort,theInputPort, theFrequency)

if nargin < 3
    error('Improper Number of Parameters. Was Expecting Filename, Outputport and InputPort')
end

[aF, aData] = TouchstoneRead(theDataFileName);

aData=permute(aData(theOutputPort,theInputPort,:),[3 2 1]);

if(nargin == 4)
    % If there is only one data point and it matches the desired frequency
    % then return that value. If there is only one data point and it
    % doesnt match the frequency then report an error
    if length(aF)==1 && aF==theFrequency
        Data=aData;
    elseif length(aF)==1 && aF~=theFrequency
        error('Desired frequency value is not within range of data');
    else
        Data=[interp1(aF,aData,theFrequency)];
        
        % An invalid number (NaN) will be returned from the interpolation if
        % the result is invalid. If this is the case throw an error.
        if isnan(aData)
            error('Desired frequency value is not within range of data');
        end
    end
else
    Data=[aF'/10^9 aData];
end

end
