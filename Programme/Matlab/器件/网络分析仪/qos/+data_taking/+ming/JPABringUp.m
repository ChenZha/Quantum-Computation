%% JPA bringup
data=data_taking.public.jpa.s21_BiasPwrpPwrs_networkAnalyzer('jpaName','impa1',...
    'startFreq',4e9,'stopFreq',8e9,...
    'numFreqPts',401,'avgcounts',10,...
    'NAPower',0,'bandwidth',3e3,...
    'pumpFreq',[],'pumpPower',[],...
    'bias',[-0.75e-3:0.1e-4:0.35e-3],...
    'notes','Check JPA alive£¬30dB @ RT','gui',true,'save',true);
%% check data
delt=1.028;
if exist('Data','var') && numel(Data)==1 % Analyse loaded data
    Data = Data{1,1};
    bias = SweepVals{1,1}{1,1};
    freqs = Data{1,1}(2,:);
else % Analyse fresh data
    Data = data.data{1};
    bias = data.sweepvals{1,1}{1,1};
    freqs = Data{1,1}(2,:);
end
meshdata=NaN(numel(bias),numel(freqs));
for II=1:numel(bias)
    meshdata(II,:)=Data{II,1}(1,:);
end
ANG=unwrap(angle(meshdata'));
figure(11);imagesc(bias,freqs,abs(meshdata'));  set(gca,'ydir','normal');xlabel('JPA bias');ylabel('Freq'); title('|S21|')
slop=(mean(ANG(end,:))-mean(ANG(1,:)))/(freqs(end)-freqs(1))*delt;
slops=meshgrid(slop*(freqs-freqs(1)),ones(1,numel(bias)))';
ANGS=mod(ANG-slops-(ANG(1,end))+pi,2*pi);
figure(12);imagesc(bias,freqs,ANGS);  set(gca,'ydir','normal');xlabel('JPA bias');ylabel('Freq');colorbar;title('unwraped phase')
%% Check sweet point
bias=[0.08:0.005:0.16]*1e-3;
for II=1:length(bias)
data=data_taking.public.jpa.s21_BiasPwrpPwrs_networkAnalyzer('jpaName','impa1',...
    'startFreq',6e9,'stopFreq',7.5e9,...
    'numFreqPts',401,'avgcounts',3,...
    'NAPower',0,'bandwidth',10e3,...
    'pumpFreq',13.4e9,'pumpPower',-10:0.5:10,...
    'bias',bias(II),...
    'notes',['Check JPA bias point, Bias=' num2str(bias(II))],'gui',true,'save',true);
end
%% Compare the On/Off ratio of JPA
data_taking.public.jpa.s21_CompJPAOnOff_networkAnalyzer('jpaName','impa1',...
    'startFreq',6.5e9,'stopFreq',6.9e9,...
    'numFreqPts',4001,'avgcounts',10,...
    'NAPower',-10,'bandwidth',10e3,...
    'pumpFreq',13.55e9,'pumpPower',5,...
    'bias',0.00014,...
    'notes','','gui',true,'save',true);